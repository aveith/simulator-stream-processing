[general]
#output_directory is the path in the system where the simulator will save the ouptut of the simluation. The output comprises the configuration mapping *.cfg, the reconfiguration mapping *.rfg, and the reconfiguration estimated statistics *.log.
output_directory=/home/veith/projects/simulator-stream-processing/results/

#basic_dir is the location of the basic *.ini files in the system
basic_dir=/home/veith/projects/simulator-stream-processing/simulations/

#destination_dir is the output directory for summarizing the reconfiguration phase. The reconfiguration phase launches several combinations of parameters using the reinforcement learning. After finishing the simulations, the system summarizes the best result for each reconfiguration strategy.
destination_dir=/home/veith/projects/simulator-stream-processing/results/

[app]
#app is the application to be simulated [etl_app, etl_stats_app, etl_pred_train_app]
app=app1.xml
#sources location = [0 - keep the values from the xml, 1 - random(edge + cloud), 2 - centralized cloud, 3 - distributed cloud, 4 - centralized edge, 5 - distributed edge]
sources=1

#sinks location = [0 - keep the values from the xml, 1 - random(edge + cloud), 2 - centralized cloud, 3 - distributed cloud, 4 - centralized edge, 5 - distributed edge]
sinks=1

[network]
#net_xml uses a existing network file 
net_xml=n3.xml

#build_xml, if it is true. It will create a new xml file for the network employing the below parameters
build_xml=true

#number_of_edge_devices_per_cloudlet - parameter to create the network xml file
number_of_edge_devices_per_cloudlet=100

#number_of_cloudlets - parameter to create the network xml file
number_of_cloudlets=40

#number_of_clouds - parameter to create the network xml file
number_of_clouds=10

#perc_of_pi_3 - parameter to create the network xml file. This percentage represents the number of RPi's devices will have the configuration of the RPi version 3, otherwise, the device will have the configuration of RPi 2
perc_of_pi_3=.5

#output_file_name is the name of the new network infrastructure created by the parameters. The system will use the basic_dir to determine the directory to save the file
output_file_name=scale.xml

[configuration]
#execute determines rather or not run the configuration phase. If it is false, you should have the statistics of the configuration on the statistic path (save_statistics_path) or must inform the location of the operator (file_operator_statistics) and path statistics (file_path_statistics). If you use external statistics, you should provide file_operator_statistics and file_path_statistics.
execute=true

#save_statistics will save the statistics if you run the configuration phase using the simulator(execute=true)
save_statistics=true

#save_statistics_path is the path to save or/and read the configuration statistics
save_statistics_path=/home/veith/tracedatasets/

#configuration_strategy is the configuration strategy to be used during the configuration. If you set the paramente with -1, the system will evaluate all existing configuraton strategies.
configuration_strategy=-1

[reconfiguration]
#execute determines rather or not run the reconfiguration phase. If you put it as false, the reconfiguration will be skipped.
execute=true

#reconfiguration_strategy is the reconfiguration strategy to be used during the reconfiguration. If you set the paramente with -1, the system will evaluate all existing reconfiguraton strategies.
reconfig_strategy=-1

#latency_weight, downtime_weight, monetary_cost_weight and wan_traffic_weight are parametes to employ on the multi-objective model. The sum of the four parameters must be equal to 1
latency_weight=1
downtime_weight=0
monetary_cost_weight=0
wan_traffic_weight=0

#pricing_type represents the one of the two pricing policies: 0 - microsoft, 1 - aws
pricing_type=0

#load_statistics, if true will use the below parameters to load the statistics.
load_statistics=false

#file_operator_statistics is the file to be used to load the operator statistics from the configuration phase and below you can find the template to fill the file:
#int hostId; int operatorId; double arrivalMsgSize; double arrivalRate; double compTime; double compRequirement; double memoryRequirement; double queueSize; double outputMsgSize; double outputRate; double selectivity; double dataCompressionExpasionFactor; double stateSize; double requiredTimeBuildWindow
file_operator_statistics=

#file_path_statistics is the file to be used to load the path statistics from the configuration phase and below you can find the template to fill the file:
#double pathtime
file_path_statistics=
